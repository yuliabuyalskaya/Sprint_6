{"name": "test_yandex_redirect", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_redirect.TestRedirect object at 0x10426ada0>\n\n    def test_yandex_redirect(self):\n        self.driver.get('https://qa-scooter.praktikum-services.ru/')\n        client = PageMyOrder(self.driver)\n>       client.check_yandex_redirect()\n\ntests/test_redirect.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/page_my_order.py:51: in check_yandex_redirect\n    WebDriverWait(self.driver, 50).until(EC.url_contains('https://dzen.ru/'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"89f50e79-e064-4884-b6a7-608ace3413e6\")>, method = <function url_contains.<locals>._predicate at 0x103efeb90>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../PycharmProjects/Sprint5/.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1718753689877, "stop": 1718753741277, "uuid": "8ca16565-6f8f-446b-932d-be286fc5fd44", "historyId": "3d460543eb288d1fb26af5256d6e503a", "testCaseId": "3d460543eb288d1fb26af5256d6e503a", "fullName": "tests.test_redirect.TestRedirect#test_yandex_redirect", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_redirect"}, {"name": "subSuite", "value": "TestRedirect"}, {"name": "host", "value": "MacBook-Pro-Ula.local"}, {"name": "thread", "value": "13739-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_redirect"}]}